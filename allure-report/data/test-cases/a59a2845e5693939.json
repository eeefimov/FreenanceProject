{"uid":"a59a2845e5693939","name":"Verify Password Field on Register Page","fullName":"TESTS.test_register_page.TestRegisterPage#test_register_password_field_validation","historyId":"03d64a6190421cd74851caa6c650f3fa","time":{"start":1695567641157,"stop":1695567659563,"duration":18406},"description":"\n    Verify the password field on the Register Page with different values.\n    If value is no valid, proper error message should be displayed.\n\n    Precondition:\n    - User is on the Register Page.\n\n    Expected Result:\n    - If value is not match with proper requirements for password,\n    an error message should be displayed as specified in 'error'.\n    ","descriptionHtml":"<pre><code>Verify the password field on the Register Page with different values.\nIf value is no valid, proper error message should be displayed.\n\nPrecondition:\n- User is on the Register Page.\n\nExpected Result:\n- If value is not match with proper requirements for password,\nan error message should be displayed as specified in 'error'.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <TESTS.test_register_page.TestRegisterPage object at 0x7faeba4f2610>, registerpage = <PAGES.RegisterPage.RegisterPage object at 0x7faeba8deca0>\nvalue = 'WGNRM3', expected = False\n\n    @allure.title(\"Verify Password Field on Register Page\")\n    @allure.feature(\"Password field error\")\n    @allure.description(\"\"\"\n    Verify the password field on the Register Page with different values.\n    If value is no valid, proper error message should be displayed.\n    \n    Precondition:\n    - User is on the Register Page.\n    \n    Expected Result:\n    - If value is not match with proper requirements for password,\n    an error message should be displayed as specified in 'error'.\n    \"\"\")\n    @allure.severity(Severity.NORMAL)\n    @pytest.mark.parametrize(\"value, expected\", params_register_page_verify_pass_field)\n    def test_register_password_field_validation(self, registerpage, value, expected):\n>       registerpage.register_check_password_field_validation(value, expected)\n\nTESTS/test_register_page.py:93: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PAGES.RegisterPage.RegisterPage object at 0x7faeba8deca0>, val = 'WGNRM3', expected = False\n\n    def register_check_password_field_validation(self, val, expected):\n        password_errors = [self.registerpage_pass_error_6, self.registerpage_pass_error_incorrect,\n                           self.registerpage_pass_error_32]\n>       assert expected == self.register_field_validation(\"Password field\", self.registerpage_pass_field,\n                                                          val, password_errors)\nE       AssertionError\n\nPAGES/RegisterPage.py:70: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1695567638881,"stop":1695567641153,"duration":2272},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"registerpage","time":{"start":1695567641154,"stop":1695567641156,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Verify the password field on the Register Page with different values.\n    If value is no valid, proper error message should be displayed.\n\n    Precondition:\n    - User is on the Register Page.\n\n    Expected Result:\n    - If value is not match with proper requirements for password,\n    an error message should be displayed as specified in 'error'.\n    ","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <TESTS.test_register_page.TestRegisterPage object at 0x7faeba4f2610>, registerpage = <PAGES.RegisterPage.RegisterPage object at 0x7faeba8deca0>\nvalue = 'WGNRM3', expected = False\n\n    @allure.title(\"Verify Password Field on Register Page\")\n    @allure.feature(\"Password field error\")\n    @allure.description(\"\"\"\n    Verify the password field on the Register Page with different values.\n    If value is no valid, proper error message should be displayed.\n    \n    Precondition:\n    - User is on the Register Page.\n    \n    Expected Result:\n    - If value is not match with proper requirements for password,\n    an error message should be displayed as specified in 'error'.\n    \"\"\")\n    @allure.severity(Severity.NORMAL)\n    @pytest.mark.parametrize(\"value, expected\", params_register_page_verify_pass_field)\n    def test_register_password_field_validation(self, registerpage, value, expected):\n>       registerpage.register_check_password_field_validation(value, expected)\n\nTESTS/test_register_page.py:93: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PAGES.RegisterPage.RegisterPage object at 0x7faeba8deca0>, val = 'WGNRM3', expected = False\n\n    def register_check_password_field_validation(self, val, expected):\n        password_errors = [self.registerpage_pass_error_6, self.registerpage_pass_error_incorrect,\n                           self.registerpage_pass_error_32]\n>       assert expected == self.register_field_validation(\"Password field\", self.registerpage_pass_field,\n                                                          val, password_errors)\nE       AssertionError\n\nPAGES/RegisterPage.py:70: AssertionError","steps":[{"name":"Go to site: https://freenance.online/","time":{"start":1695567641157,"stop":1695567643633,"duration":2476},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click 'registration link'","time":{"start":1695567643633,"stop":1695567644056,"duration":423},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Send WGNRM3 to Password field field","time":{"start":1695567644056,"stop":1695567644468,"duration":412},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1695567659699,"stop":1695567660479,"duration":780},"status":"passed","steps":[],"attachments":[{"uid":"770a34fb1c366ca7","name":"Screenshot","source":"770a34fb1c366ca7.png","type":"image/png","size":599264},{"uid":"d64d39f0af74b761","name":"Browser Logs","source":"d64d39f0af74b761.txt","type":"text/plain","size":1315}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Password field error"},{"name":"suite","value":"Register Page"},{"name":"parentSuite","value":"TESTS"},{"name":"subSuite","value":"TestRegisterPage"},{"name":"host","value":"Fimas-MacBook-Pro.local"},{"name":"thread","value":"31885-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TESTS.test_register_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected","value":"False"},{"name":"value","value":"'WGNRM3'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a59a2845e5693939.json","parameterValues":["False","'WGNRM3'"]}